<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bean.dao.MovieMapper" >
  <resultMap id="BaseResultMap" type="com.bean.model.Movie" >
    <id column="movieID" property="movieid" jdbcType="VARCHAR" />
    <result column="userID" property="userid" jdbcType="VARCHAR" />
    <result column="movieName" property="moviename" jdbcType="VARCHAR" />
    <result column="movieIntroduction" property="movieintroduction" jdbcType="VARCHAR" />
    <result column="movieType" property="movietype" jdbcType="VARCHAR" />
    <result column="movieLike" property="movielike" jdbcType="INTEGER" />
    <result column="movieScore" property="moviescore" jdbcType="DOUBLE" />
    <result column="movieWatch" property="moviewatch" jdbcType="INTEGER" />
    <result column="moviePictureURL" property="moviepictureurl" jdbcType="VARCHAR" />
    <result column="movieURL" property="movieurl" jdbcType="VARCHAR" />
    <result column="movieUpdateDate" property="movieupdatedate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    movieID, userID, movieName, movieIntroduction, movieType, movieLike, movieScore, 
    movieWatch, moviePictureURL, movieURL, movieUpdateDate
  </sql>
  
  <select id="getSameTypeList" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select * from movie where movieType=#{movietype} order by movielike limit 6
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from movie
    where movieID = #{movieid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from movie
    where movieID = #{movieid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bean.model.Movie" >
    insert into movie (movieID, userID, movieName, 
      movieIntroduction, movieType, movieLike, 
      movieScore, movieWatch, moviePictureURL, 
      movieURL, movieUpdateDate)
    values (#{movieid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{moviename,jdbcType=VARCHAR}, 
      #{movieintroduction,jdbcType=VARCHAR}, #{movietype,jdbcType=VARCHAR}, #{movielike,jdbcType=INTEGER}, 
      #{moviescore,jdbcType=DOUBLE}, #{moviewatch,jdbcType=INTEGER}, #{moviepictureurl,jdbcType=VARCHAR}, 
      #{movieurl,jdbcType=VARCHAR}, #{movieupdatedate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.model.Movie" >
    insert into movie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="movieid != null" >
        movieID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="moviename != null" >
        movieName,
      </if>
      <if test="movieintroduction != null" >
        movieIntroduction,
      </if>
      <if test="movietype != null" >
        movieType,
      </if>
      <if test="movielike != null" >
        movieLike,
      </if>
      <if test="moviescore != null" >
        movieScore,
      </if>
      <if test="moviewatch != null" >
        movieWatch,
      </if>
      <if test="moviepictureurl != null" >
        moviePictureURL,
      </if>
      <if test="movieurl != null" >
        movieURL,
      </if>
      <if test="movieupdatedate != null" >
        movieUpdateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="movieid != null" >
        #{movieid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="moviename != null" >
        #{moviename,jdbcType=VARCHAR},
      </if>
      <if test="movieintroduction != null" >
        #{movieintroduction,jdbcType=VARCHAR},
      </if>
      <if test="movietype != null" >
        #{movietype,jdbcType=VARCHAR},
      </if>
      <if test="movielike != null" >
        #{movielike,jdbcType=INTEGER},
      </if>
      <if test="moviescore != null" >
        #{moviescore,jdbcType=DOUBLE},
      </if>
      <if test="moviewatch != null" >
        #{moviewatch,jdbcType=INTEGER},
      </if>
      <if test="moviepictureurl != null" >
        #{moviepictureurl,jdbcType=VARCHAR},
      </if>
      <if test="movieurl != null" >
        #{movieurl,jdbcType=VARCHAR},
      </if>
      <if test="movieupdatedate != null" >
        #{movieupdatedate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.Movie" >
    update movie
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="moviename != null" >
        movieName = #{moviename,jdbcType=VARCHAR},
      </if>
      <if test="movieintroduction != null" >
        movieIntroduction = #{movieintroduction,jdbcType=VARCHAR},
      </if>
      <if test="movietype != null" >
        movieType = #{movietype,jdbcType=VARCHAR},
      </if>
      <if test="movielike != null" >
        movieLike = #{movielike,jdbcType=INTEGER},
      </if>
      <if test="moviescore != null" >
        movieScore = #{moviescore,jdbcType=DOUBLE},
      </if>
      <if test="moviewatch != null" >
        movieWatch = #{moviewatch,jdbcType=INTEGER},
      </if>
      <if test="moviepictureurl != null" >
        moviePictureURL = #{moviepictureurl,jdbcType=VARCHAR},
      </if>
      <if test="movieurl != null" >
        movieURL = #{movieurl,jdbcType=VARCHAR},
      </if>
      <if test="movieupdatedate != null" >
        movieUpdateDate = #{movieupdatedate,jdbcType=VARCHAR},
      </if>
    </set>
    where movieID = #{movieid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.Movie" >
    update movie
    set userID = #{userid,jdbcType=VARCHAR},
      movieName = #{moviename,jdbcType=VARCHAR},
      movieIntroduction = #{movieintroduction,jdbcType=VARCHAR},
      movieType = #{movietype,jdbcType=VARCHAR},
      movieLike = #{movielike,jdbcType=INTEGER},
      movieScore = #{moviescore,jdbcType=DOUBLE},
      movieWatch = #{moviewatch,jdbcType=INTEGER},
      moviePictureURL = #{moviepictureurl,jdbcType=VARCHAR},
      movieURL = #{movieurl,jdbcType=VARCHAR},
      movieUpdateDate = #{movieupdatedate,jdbcType=VARCHAR}
    where movieID = #{movieid,jdbcType=VARCHAR}
  </update>
</mapper>